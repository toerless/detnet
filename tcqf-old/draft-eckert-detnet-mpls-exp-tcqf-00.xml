<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-eckert-detnet-mpls-tc-tcqf-00" category="std">

  <front>
    <title abbrev="detnet-mpls-tc-tcqf">Deterministic Networking (DetNet) Data Plane - MPLS TC Tagging for Cyclic Queuing and Forwarding (MPLS-TC TCQF)</title>

    <author initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei Technologies USA</organization>
      <address>
        <postal>
          <street>2220 Central Expressway</street>
          <city>Santa Clara</city>
          <code>CA 95050</code>
          <country>USA</country>
        </postal>
        <email>tte@cs.fau.de</email>
      </address>
    </author>
    <author initials="S." surname="Bryant" fullname="Stewart Bryant">
      <organization>University of Surrey ICS</organization>
      <address>
        <email>s.bryant@surrey.ac.uk</email>
      </address>
    </author>

    <date year="2021" month="September" day="08"/>

    
    <workgroup>DETNET</workgroup>
    

    <abstract>


<t>This memo defines the use of the MPLS TC field of MPLS Label Stack Entries (LSE) to support
cycle tagging of packets for Multiple Buffer Cyclic Queuing and Forwarding (TCQF).
TCQF is a mechanism to support bounded latency forwarding in DetNet network.</t>

<t>Target benefits of TCQF include low end-to-end
jitter, ease of high-speed hardware implementation, optional ability to support large number
of flow in large networks via DiffServ style aggregation by applying TCQF to
the DetNet aggregate instead of each DetNet flow individually, and support of wide-area DetNet
networks with arbitrary link latencies and latency variations.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Cyclic Queuing and Forwarding <xref target="CQF"/>, is an IEEE standardized queuing mechanism in support of deterministic bounded latency. See also <xref target="I-D.ietf-detnet-bounded-latency"/>, Section 6.6.</t>

<t>CQF benefits for Deterministic QoS include the tightly bounded jitter it provides as well as the per-flow stateless operation, minimizing the complexity of high-speed hardware implementations and allowing to support on transit hops arbitrary number of DetNet flow in the forwarding plane because of the absence of per-hop, per-flow QoS processing. In the terms of the IETF QoS architecture, CQF can be called DiffServ QoS technology, operating only on a traffic aggregate.</t>

<t>CQFs is limited to only limited-scale wide-area network deployments because it cannot take the propagation latency of links into account, nor potential variations thereof. It also requires very high precision clock synchronization, which is uncommon in wide-area network equipment beyond mobile network fronthaul. See <xref target="I-D.eckert-detnet-bounded-latency-problems"/> for more details.</t>

<t>This specification introduces and utilizes an enhanced form of CQF where packets are tagged with a cycle identifier, and a limited number of cycles, e.g.: 3…7 are used to overcome these distance and clock synchronization limitations. Because this memo defines how to use the TC field of MPLS LSE as the tag to carry the cycle identifier, it calls this scheme TC Tagged multiple buffer CQF (TC TCQF). See <xref target="I-D.qiang-DetNet-large-scale-DetNet"/> and <xref target="I-D.dang-queuing-with-multiple-cyclic-buffers"/> for more details of the theory of operations of TCQF. Note that TCQF is not necessarily limited to deterministic operations but could also be used in conjunction with congestion controlled traffic, but those considerations are outside the scope of this memo.</t>

<t>TCQF is likely especially beneficial when MPLS networks are designed to avoid per-hop, per-flow state even for traffic steering, which is the case for networks using SR-MPLS <xref target="RFC8402"/> for traffic steering of MPLS unicast traffic and/or BIER-TE <xref target="I-D.ietf-bier-te-arch"/> for tree engineering of MPLS multicast traffic. In these networks, it is specifically undesirable to require per-flow signaling to P-LSR solely for DetNet QoS because such per-flow state is unnecessary for traffic steering and would only be required for the bounded latency QoS mechanism and require likely even more complex hardware and manageability support than what was previously required for per-hop steering state (e.g. In RSVP-TE). Note that the DetNet architecture <xref target="RFC8655"/> does not include full support for this DiffServ model, which is why this memo describes how to use MPLS TC TCQF with the DetNet architecture per-hop, per-flow processing as well as without it.</t>

</section>
<section anchor="using-tcqf-with-detnet-mpls-informative" title="Using TCQF with DetNet MPLS (informative)">

<t>This section gives an overview of how the operations of T-CQF relates
to the DetNet architecture. We first revisit QoS with DetNet in the absence of T-CQF.</t>

<figure title="A DetNet MPLS Network" anchor="FIG-DetNet-MPLS"><artwork><![CDATA[
 DetNet MPLS       Relay       Transit         Relay       DetNet MPLS
 End System        Node         Node           Node        End System
    T-PE1          S-PE1        LSR-P          S-PE2       T-PE2
 +----------+                                             +----------+
 |   Appl.  |<------------ End-to-End Service ----------->|   Appl.  |
 +----------+   +---------+                 +---------+   +----------+
 | Service  |<--| Service |-- DetNet flow --| Service |-->| Service  |
 +----------+   +---------+  +----------+   +---------+   +----------+
 |Forwarding|   |Fwd| |Fwd|  |Forwarding|   |Fwd| |Fwd|   |Forwarding|
 +-------.--+   +-.-+ +-.-+  +----.---.-+   +-.-+ +-.-+   +---.------+
         :  Link  :    /  ,-----.  \   : Link :    /  ,-----.  \
         +........+    +-[ Sub-  ]-+   +......+    +-[ Sub-  ]-+
                         [Network]                   [Network]
                          `-----'                     `-----'
         |<- LSP -->| |<-------- LSP -----------| |<--- LSP -->|
  
         |<----------------- DetNet MPLS --------------------->|
]]></artwork></figure>

<t>The above <xref target="FIG-DetNet-MPLS"/>, is copied from <xref target="RFC8964"/>, Figure 2, 
and only enhanced by numbering the nodes to be able to better refer
to them in the following text.</t>

<t>Assume a DetNet flow is sent from T-PE1 to T-PE2 across S-PE1, LSR, S-PE2. 
In general, bounded latency QoS processing is then required on the
outgoing interface of T-PE1 towards S-PE1, and any further outgoing
interface along the path. When T-PE1 and S-PE2 know that their next-hop
is a service LSR, their DetNet flow label stack may simply have the
DetNet flows Service Label (S-Label) as its Top of Stack (ToS) LSE,
explicitly indicating one DetNet flow.</t>

<t>On S-PE1, the next-hop LSR is
not DetNet aware, which is why S-PE1 would need to send a label stack
where the S-Label is followed by a Forwarding Label (F-Label), and
LSR-P would need to perform bounded latency based QoS on that F-Label.</t>

<t>For bounded latency QoS mechanisms relying on per-flow regulator state,
such as in <xref target="TSN-ATS"/>, this requires the use of a per-detnet flow F-Label
across the network from S-PE1 to S-PE2, for example through RSVP-TE <xref target="RFC3209"/>
enhanced as necessary with QoS parameters matching the underlying bounded
latency mechanism (such as <xref target="TSN-ATS"/>).</t>

<t>With TC TCQF, a sequence of LSR and DetNet service node implements
TC TCQF, ideally from T-PE1 (ingress) to T-PE2 (egress).  The ingress
node needs to perform per-DetNet-flow per-packet “shaping” to  assign
each packet of a flow to a particular TCQF cycle. This ingress-edge-function
is currently out of scope of this document (TBD), but would be based
on the same type of edge function as used in CQF.</t>

<t>All LSR/Service node after the ingress node only have to map a
received TCQF tagged DetNet packet to the configured cycle
on the output interface, not requiring any per-DetNet-flow QoS state.
These LSR/Service nodes do therefore also not require per-flow
interactions with the controller plane for the purpose of bounded latency.</t>

<t>Per-flow state therefore is therefore only required on nodes that are 
DetNet service nodes, or when explicit, per-DetNet flow steering
state is desired, instead of ingress steering through e.g.: SR-MPLS.</t>

<t>Operating TCQF per-flow stateless across a service node, such as S-PE1, S-PE2
in the picture is only an option. It is of course equally feasible to
Have one TCQF domain from T-PE1 to S-PE2, start a new TCQF domain there,
running for example up to S-PE2 and start another one to T-PE2.</t>

<t>A service node must act as an egress/ingress edge of a TCQF domain if it needs
to perform operations that do change the timing of packets other than
the type of latency that can be considered in configuration of TCQF (see <xref target="calculation"></xref>).</t>

<t>For example, if T-PE1 is ingress for a TCQF domain, and T-PE2 is the egress,
S-PE1 could perform the DetNet Packet Replication Function (PRF)  without having to be a TQCF 
edge node as long as it does not introduce latencies not included in the TCQF
setup and the controller plane reserves resources for the multitude of flows
created by the replication taking the allocation of resources in the TCQF cycles into account.</t>

<t>Likewise, S-PE2 could perform the Packet Elimination Function without being
a TCQF edge node as this most likely does not introduce any non-TCQF acceptable
latency - and the controller plane accordingly reserves only for one flow
the resources on the S-PE2-&gt;T-PE2 leg.</t>

<t>If on the other hand, S-PE2 was to perform the Packet Reordering Function (PRF), this could
create large peaks of packets when out-of-order packets are released together.
A PRF would either have to take care of shaping out those bursts for the traffic
of a flow to again conform to the admitted CIR/PIR, or else the service node
would have to be a TCQF egress/ingress, performing that shaping itself as an
ingress function.</t>

</section>
<section anchor="model" title="Data model and tag processing for MPLS TC TCQF (normative)">

<figure title="TCQF Data Model" anchor="FIG-Data-Model"><artwork><![CDATA[
module ietf-detnet-tcqf
  augment TBD 
    +--rw tcqf-config
    |  +--rw cycles uint16
    |  +--rw cycle-time uint16
    |  +--rw cycle-clock-offset uint32
    |  +--rw tcqf-if-config* [oif-name]
    |     +--rw oif-name       if:interface-ref
    |     +--rw cycle-clock-offset int32
    |     +--rw tcqf-iif-cycle-map* [iif-name]
    |        +--rw iif-name    if:interface-ref
    |        +--rw iif-cycle-map* [iif-cycle]
    |           +--rw iif-cycle  uint8
    |           +--rw oif-cycle  uint8
    |
    +--rw tcqf-mpls-tc-tag* [name]
       +--rw name         if:interface-ref
       +--rw cycle* [cycle]
          +--rw cycle  uint8
          +--rw tc    uint8
]]></artwork></figure>

<t>tcqf-config is the router/LSR wide configuration of TCQF parameters,
independent of the tagging of the method with which cycles are tagged
on any interface. This YANG model represents a single TQCF domain,
which is a set of interfaces acting both as ingress (iif) and egress (oif)
interfaces, capable to forward TCQF packets amongst each other. When
multiple independent instances or TCQF domains are used, they can have
separate parameters.</t>

<t>cycles is the number of cycles used across all interfaces.  router/LSR MUST support 3 and 4 cycles. To support interfaces with MPLS TC tagging, 7 or less cycles must be used.</t>

<t>The cycle time is cycle-time in units of micro-seconds.
router/LSR MUST support configuration of cycle-times of 20,50,100,200,500,1000,2000 usec.</t>

<t>Cycles start at an offset of cycle-clock-offset in units of nsec as follows. 
Let clock1 be a timestamp of the local reference clock for TCQF, at which
cycle 1 starts, then:</t>

<t>cycle-clock-offset = (clock1 mod (cycle-time * cycles) )</t>

<t>The local reference clock is expected to be synchronized with the neighboring nodes.
cycle-clock-offset can be configurable, or it may be derived from immutable
properties of the implementation, in which case it is read-only.</t>

<t>tcqf-if-config is the optional per-interface configuration of TCQF parameters.</t>

<t>The cycle-clock-offset in tcqf-oif-config may be different from the
router/LSR wide cycle-clock-offset, for example, when interfaces are on line cards with
independently synchronized clocks, or when non-uniform ingress-to-egress propagation
latency over a complex router/LSR fabric makes it beneficial to allow per-egress interface
or line card configuration of cycle-clock-offset.</t>

<t>If cycle-clock-offset is unused and therefore the router/LSR wide cycle-clock-offset is
used, the value MUST be -1. This is the only permitted negative number.</t>

<t>tcqf-iif-cycle-map is defining how to map the cycle iif-cycle of
a packet received from an incoming interface (iif-name) once the LSR has
determined that the packet needs to be sent to oif-name and sent with TCQF.
The packet is then assigned to cycle oif-cycle on oif-name.</t>

<t>Note that all parameters so far allow for different methods of tagging
the cycle in the packet across different interfaces and allowing TCQF
to operate across them, even if future work would introduce different
tagging methods than the following MPLS TC mapping.</t>

<t>tcqf-mpls-tc-tag defines the mapping of cycle number to MPLS TC tag.
This mapping is configured for all interfaces that use MPLS TC tagging.
When a packet is received with a ToS LSE indicating a TC for which
there is a mapping to a cycle in tcqf-mpls-tc-tag, then this packet
is assigned to the configured cycle.</t>

<t>If the packet is forwarded to another interface with tcqf configured,
the cycle number derived from mapping the received ToS LSE TC field to the
cycle number when receiving the packet will be mapped according to
tcqf-oif-config after all label stack changes are applied and the packet
is to be sent. If that outgoing interface is also using MPLS TC
TCQF tagging, then the TC value of the ToS LSE will be rewritten
according to the tcqf-mpls-tc-tag configuration of that outgoing interface.</t>

<t>tc in tcqf-mpls-tc-tag MUST NOT use values to be used for non-TCQF
traffic, most commonly 0 for Best Effort (BE) traffic.</t>

</section>
<section anchor="tcqf-with-labels-stack-operations-normative" title="TCQF with labels stack operations (normative)">

<t>TCQF QoS as defined here is in the terminology of <xref target="RFC3270"/> a
TC-Inferred-PSC LSP (E-LSP) behavior. Packets are determined to
belong to the TCQF PSC solely based on the TC of he received
packet.</t>

<t>Packets originated into the TCQF PSC on the ingress LSR  are
assumed for the purpose of this specification to be received
from an internal interface for which the cycle mapping table
on every interface is 1:1. This allows to distinguish the case
of originated TCQF packets from those received from another LSR.</t>

<t>Note that this ingress mapping rule does not represent the shaping
 necessary on an ingress TCQF router. TBD.</t>

<t>Label swap in the case of LDP or RSVP-TE LSP, or label pop in the
case of SR-MPLS traffic steering, or any other operation may result
in a different label to become the ToS LSE. Whenever a packet
has an associated TCQF cycle and is sent to an interface with
TCQF, the cycle is mapped to that outgoing interfaces cycle space
and the TC of the ToS LSE accordingly updated.</t>

</section>
<section anchor="tcqf-pseudocode-normative" title="TCQF Pseudocode (normative)">

<t>The following pseudocode restates the prior two section text
in an algorithmic fashion. It uses the objects of the TCQF YANG
data model defined in <xref target="model"></xref>.</t>

<figure title="TCQF Pseudocode" anchor="FIG-Pseudocode"><artwork><![CDATA[
tcqf = ietf-detnet-tcqf
void receive(pak) {

  // Receive side TCQF - remember cycle in
  // packet internal header
  iif = pak.context.iif
  if(tcqf.tcqf-if-config[iif]) { // TCQF enabled
    if(tcqf.tcqf-mpls-tc-tag[iif]) { // TC-TCQF
      pak.context.tcqf_cycle = 
        map_tc2cycle(pak.mpls_header.lse[tos].tc,
          tcqf.tcqf-mpls-tc-tag[iif])
    } else // other future encap/tagging options for TCQF
  }

  // Forwarding including any LSE operations
  oif = pak.context.oif = forward_process(pak)

  // ... optional  DetNet PREOF functions here
  // ... if router is DetNet service node

  if(pak.context.tcqf_cycle && // non TCQF packets value is 0
     tcqf.tcqf-if-config[oif]) { // TCQF enabled
    // Map tcqf_cycle for iif to oif mapping table
    cycle = pak.context.tcqf_cycle =
      map_cycle(cycle,
        tcqf.tcqf-if-config[oif].tcqf-iif-cycle-map[[iif])

    if(tcqf.tcqf-mpls-tc-tag[iif]) { // TC-TCQF
      pak.mpls_header.lse[tos].tc =
        map_cycle2tc(cycle, tcqf.tcqf-mpls-tc-tag[oif])
    } else // other future encap/tagging options for TCQF

    tcqf_enqueue(pak, oif.cycleq[cycle])
  }
}

// Started when TCQF is enabled on an interface
void send_tcqf(oif) {
  cycle = 1
  cc =  tcqf.tcqf-config.cycle-time *
        tcqf.tcqf-config.cycle-time
  o =   tcqf.tcqf-config.cycle-clock-offset
  nextcyclestart = floor(tnow / cc) * cc + cc + o

  while(1) {
    while(tnow < nextcyclestart) { }
    while(pak = dequeue(oif.cycleq(cycle)) {
      send(pak)
    } 
    cycle = (cycle + 1) mod tcqf.tcqf-config.cycles + 1
    nextcyclestart += tcqf.tcqf-config.cycle-time
  }
}
]]></artwork></figure>

</section>
<section anchor="tcqf-yang-model-normative-tbd" title="TCQF YANG Model (normative) TBD">

<t>TBD - according to <xref target="model"/>.</t>

</section>
<section anchor="calculation" title="Computing cycle mappings (informative)">

<t>The cycle mapping is computed by the controller plane by taking at minimum
the link, interface serialization and node internal forwarding latencies as well
as the cycle-clock-offsets into account.</t>

<figure title="Calculation reference" anchor="Calc1"><artwork><![CDATA[
Router  . O1
 R1     . | cycle 1 | cycle 2 | cycle 3 | cycle 1 |
        .    .
        .     ............... Delay D
        .                    .
        .                    O1'
        .                     | cycle 1 |
Router  .   | cycle 1 | cycle 2 | cycle 3 | cycle 1 |
  R2    .   O2

CT  = cycle-time
C   = cycles
CC  = CT * C
O1  = cycle-clock-offset router R1, interface towards R2
O2  = cycle-clock-offset router R2, output interface of interest
O1' = O1 + D
]]></artwork></figure>

<t>Consider in {#Calc1} that Router R1 sends packets via C = 3 cycles with a
cycle-clock offset of O1 towards Router R2. These packets arrive
at R2 with a cycle-clock offset of O1’ which includes through D all latencies
incurred between releasing a packet on R1 from the cycle buffer until
it can be put into a cycle buffer on R2: serialization delay on R1,
link delay, non-CQF delays in R1 and R2, especially forwarding in
R2, potentially across an internal fabric to the output interface
with the sending cycle buffers.</t>

<figure title="Calculating cycle mapping" anchor="Calc2"><artwork><![CDATA[
A = ( ceil( ( O1' - O2 ) / CT) + C + 1) mod CC
map(i) = (i - 1 + A) mod C + 1
]]></artwork></figure>

<t>{#Calc2} shows a formula to calculate the cycle mapping between
R1 and R2, using the first available cycle on R2. In the example
of {#Calc1} with CT = 1, (O1’ - O2) =~ 1.8, A will be 0, resulting
in map(1) to be 1, map(2) to be 2 and map(3) to be 3.</t>

<t>The offset “C” for the calculation of A is included so that
a negative (O1 - O2) will still lead to a positive A.</t>

<t>In general, D will be variable [Dmin…Dmax], for example because
of differences in serialization latency between min and max size
packets, variable link latency because of temperature based length
variations, link-layer variability (radio links) or in-router
processing variability. In addition, D also needs to account for the
drift between the synchronized clocks for R1 and R2. This
is called the Maximum Time Interval Error (MTIE).</t>

<t>Let A(d) be A where O1’ is calculated with D = d. To account for
the variability of latency and clock synchronization, map(i) has to
be calculated with A(Dmax), and the controller plane needs to
ensure that that A(Dmin)…A(Dmax) does cover at most (C - 1) cycles.</t>

<t>If it does cover C cycles, then C and/or CT are chosen too small,
and the controller plane needs to use larger numbers for either.</t>

<t>This (C - 1) limitation is based on the understanding that there is only
one buffer for each cycle, so a cycle cannot receive packets
when it is sending packets. While this could be changed by
using double buffers, this would create additional implementation
complexity and not solve the limitation for all cases, because
the number of cycles to cover [Dmin…Dmax] could also be (C + 1)
or larger, in which case a tag of 1…C would not suffice.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no IANA considerations.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference anchor='RFC3270' target='https://www.rfc-editor.org/info/rfc3270'>
<front>
<title>Multi-Protocol Label Switching (MPLS) Support of Differentiated Services</title>
<author fullname='F. Le Faucheur' initials='F.' surname='Le Faucheur'><organization/></author>
<author fullname='L. Wu' initials='L.' surname='Wu'><organization/></author>
<author fullname='B. Davie' initials='B.' surname='Davie'><organization/></author>
<author fullname='S. Davari' initials='S.' surname='Davari'><organization/></author>
<author fullname='P. Vaananen' initials='P.' surname='Vaananen'><organization/></author>
<author fullname='R. Krishnan' initials='R.' surname='Krishnan'><organization/></author>
<author fullname='P. Cheval' initials='P.' surname='Cheval'><organization/></author>
<author fullname='J. Heinanen' initials='J.' surname='Heinanen'><organization/></author>
<date month='May' year='2002'/>
<abstract><t>This document defines a flexible solution for support of Differentiated Services (Diff-Serv) over Multi-Protocol Label Switching (MPLS) networks.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3270'/>
<seriesInfo name='DOI' value='10.17487/RFC3270'/>
</reference>



<reference anchor='RFC8964' target='https://www.rfc-editor.org/info/rfc8964'>
<front>
<title>Deterministic Networking (DetNet) Data Plane: MPLS</title>
<author fullname='B. Varga' initials='B.' role='editor' surname='Varga'><organization/></author>
<author fullname='J. Farkas' initials='J.' surname='Farkas'><organization/></author>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='A. Malis' initials='A.' surname='Malis'><organization/></author>
<author fullname='S. Bryant' initials='S.' surname='Bryant'><organization/></author>
<author fullname='J. Korhonen' initials='J.' surname='Korhonen'><organization/></author>
<date month='January' year='2021'/>
<abstract><t>This document specifies the Deterministic Networking (DetNet) data plane when operating over an MPLS Packet Switched Network.  It leverages existing pseudowire (PW) encapsulations and MPLS Traffic Engineering (MPLS-TE) encapsulations and mechanisms.  This document builds on the DetNet architecture and data plane framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='8964'/>
<seriesInfo name='DOI' value='10.17487/RFC8964'/>
</reference>



<reference anchor='RFC8655' target='https://www.rfc-editor.org/info/rfc8655'>
<front>
<title>Deterministic Networking Architecture</title>
<author fullname='N. Finn' initials='N.' surname='Finn'><organization/></author>
<author fullname='P. Thubert' initials='P.' surname='Thubert'><organization/></author>
<author fullname='B. Varga' initials='B.' surname='Varga'><organization/></author>
<author fullname='J. Farkas' initials='J.' surname='Farkas'><organization/></author>
<date month='October' year='2019'/>
<abstract><t>This document provides the overall architecture for Deterministic Networking (DetNet), which provides a capability to carry specified unicast or multicast data flows for real-time applications with extremely low data loss rates and bounded latency within a network domain.  Techniques used include 1) reserving data-plane resources for individual (or aggregated) DetNet flows in some or all of the intermediate nodes along the path of the flow, 2) providing explicit routes for DetNet flows that do not immediately change with the network topology, and 3) distributing data from DetNet flow packets over time and/or space to ensure delivery of each packet's data in spite of the loss of a path.  DetNet operates at the IP layer and delivers service over lower-layer technologies such as MPLS and Time- Sensitive Networking (TSN) as defined by IEEE 802.1.</t></abstract>
</front>
<seriesInfo name='RFC' value='8655'/>
<seriesInfo name='DOI' value='10.17487/RFC8655'/>
</reference>



<reference anchor='RFC3209' target='https://www.rfc-editor.org/info/rfc3209'>
<front>
<title>RSVP-TE: Extensions to RSVP for LSP Tunnels</title>
<author fullname='D. Awduche' initials='D.' surname='Awduche'><organization/></author>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='D. Gan' initials='D.' surname='Gan'><organization/></author>
<author fullname='T. Li' initials='T.' surname='Li'><organization/></author>
<author fullname='V. Srinivasan' initials='V.' surname='Srinivasan'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<date month='December' year='2001'/>
<abstract><t>This document describes the use of RSVP (Resource Reservation Protocol), including all the necessary extensions, to establish label-switched paths (LSPs) in MPLS (Multi-Protocol Label Switching).  Since the flow along an LSP is completely identified by the label applied at the ingress node of the path, these paths may be treated as tunnels.  A key application of LSP tunnels is traffic engineering with MPLS as specified in RFC 2702.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3209'/>
<seriesInfo name='DOI' value='10.17487/RFC3209'/>
</reference>



<reference anchor='RFC8402' target='https://www.rfc-editor.org/info/rfc8402'>
<front>
<title>Segment Routing Architecture</title>
<author fullname='C. Filsfils' initials='C.' role='editor' surname='Filsfils'><organization/></author>
<author fullname='S. Previdi' initials='S.' role='editor' surname='Previdi'><organization/></author>
<author fullname='L. Ginsberg' initials='L.' surname='Ginsberg'><organization/></author>
<author fullname='B. Decraene' initials='B.' surname='Decraene'><organization/></author>
<author fullname='S. Litkowski' initials='S.' surname='Litkowski'><organization/></author>
<author fullname='R. Shakir' initials='R.' surname='Shakir'><organization/></author>
<date month='July' year='2018'/>
<abstract><t>Segment Routing (SR) leverages the source routing paradigm.  A node steers a packet through an ordered list of instructions, called &quot;segments&quot;.  A segment can represent any instruction, topological or service based.  A segment can have a semantic local to an SR node or global within an SR domain.  SR provides a mechanism that allows a flow to be restricted to a specific topological path, while maintaining per-flow state only at the ingress node(s) to the SR domain.</t><t>SR can be directly applied to the MPLS architecture with no change to the forwarding plane.  A segment is encoded as an MPLS label.  An ordered list of segments is encoded as a stack of labels.  The segment to process is on the top of the stack.  Upon completion of a segment, the related label is popped from the stack.</t><t>SR can be applied to the IPv6 architecture, with a new type of routing header.  A segment is encoded as an IPv6 address.  An ordered list of segments is encoded as an ordered list of IPv6 addresses in the routing header.  The active segment is indicated by the Destination Address (DA) of the packet.  The next active segment is indicated by a pointer in the new routing header.</t></abstract>
</front>
<seriesInfo name='RFC' value='8402'/>
<seriesInfo name='DOI' value='10.17487/RFC8402'/>
</reference>


<reference anchor='I-D.ietf-bier-te-arch'>
   <front>
      <title>Tree Engineering for Bit Index Explicit Replication (BIER-TE)</title>
      <author fullname='Toerless Eckert'>
	 <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Gregory Cauchie'>
	 <organization>Bouygues Telecom</organization>
      </author>
      <author fullname='Michael Menth'>
	 <organization>University of Tuebingen</organization>
      </author>
      <date day='9' month='July' year='2021'/>
      <abstract>
	 <t>   This memo describes per-packet stateless strict and loose path
   steered replication and forwarding for Bit Index Explicit Replication
   packets (RFC8279).  It is called BIER Tree Engineering (BIER-TE) and
   is intended to be used as the path steering mechanism for Traffic
   Engineering with BIER.

   BIER-TE introduces a new semantic for bit positions (BP) that
   indicate adjacencies, as opposed to BIER in which BPs indicate Bit-
   Forwarding Egress Routers (BFER).  BIER-TE can leverage BIER
   forwarding engines with little changes.  Co-existence of BIER and
   BIER-TE forwarding in the same domain is possible, for example by
   using separate BIER sub-domains (SDs).  Except for the optional
   routed adjacencies, BIER-TE does not require a BIER routing underlay,
   and can therefore operate without depending on an Interior Gateway
   Routing protocol (IGP).

   As it operates on the same per-packet stateless forwarding
   principles, BIER-TE can also be a good fit to support multicast path
   steering in Segment Routing (SR) networks.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-bier-te-arch-10'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-bier-te-arch-10.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-detnet-bounded-latency'>
   <front>
      <title>DetNet Bounded Latency</title>
      <author fullname='Norman Finn'>
	 <organization>Huawei Technologies Co. Ltd</organization>
      </author>
      <author fullname='Jean-Yves Le Boudec'>
	 <organization>EPFL</organization>
      </author>
      <author fullname='Ehsan Mohammadpour'>
	 <organization>EPFL</organization>
      </author>
      <author fullname='Jiayi Zhang'>
	 <organization>Huawei Technologies Co. Ltd</organization>
      </author>
      <author fullname='Balázs Varga'>
	 <organization>Ericsson</organization>
      </author>
      <author fullname='János Farkas'>
	 <organization>Ericsson</organization>
      </author>
      <date day='1' month='September' year='2021'/>
      <abstract>
	 <t>   This document references specific queuing mechanisms, defined in
   other documents, that can be used to control packet transmission at
   each output port and achieve the DetNet qualities of service.  This
   document presents a timing model for sources, destinations, and the
   DetNet transit nodes that relay packets that is applicable to all of
   those referenced queuing mechanisms.  Using the model presented in
   this document, it should be possible for an implementor, user, or
   standards development organization to select a particular set of
   queuing mechanisms for each device in a DetNet network, and to select
   a resource reservation algorithm for that network, so that those
   elements can work together to provide the DetNet service.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-detnet-bounded-latency-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-detnet-bounded-latency-07.txt' type='TXT'/>
</reference>


<reference anchor='I-D.eckert-detnet-bounded-latency-problems'>
   <front>
      <title>Problems with existing DetNet bounded latency queuing mechanisms</title>
      <author fullname='Toerless Eckert'>
	 <organization>Futurewei Technologies USA</organization>
      </author>
      <author fullname='Stewart Bryant'>
	 <organization>Stewart Bryant Ltd</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   The purpose of this memo is to explain the challenges and limitations
   of existing (standardized) bounded latency queuing mechanisms for
   desirable (large scale) MPLS and/or IP based networks to allow them
   to support DetNet services.  These challenges relate to low-cost,
   high-speed hardware implementations, desirable network design
   approaches, system complexity, reliability, scalability, cost of
   signaling, performance and jitter experience for the DetNet
   applications.  Many of these problems are rooted in the use of per-
   hop, per-flow (DetNet) forwarding and queuing state, but highly
   accurate network wide time synchronization can be another challenge
   for some networks.

   This memo does not intend to propose a specific queuing solution, but
   in the same way in which it describes the challenges of mechanisms,
   it reviews how those problem are addressed by currently proposed new
   queuing mechanisms.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-eckert-detnet-bounded-latency-problems-00'/>
   <format target='https://www.ietf.org/archive/id/draft-eckert-detnet-bounded-latency-problems-00.txt' type='TXT'/>
</reference>


<reference anchor='I-D.qiang-DetNet-large-scale-DetNet'>
   <front>
      <title>Large-Scale Deterministic IP Network</title>
      <author fullname='Li Qiang'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Xuesong Geng'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Bingyang Liu'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Toerless Eckert'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Liang Geng'>
	 <organization>China Mobile</organization>
      </author>
      <author fullname='Guangpeng Li'>
	 </author>
      <date day='2' month='September' year='2019'/>
      <abstract>
	 <t>   This document presents the overall framework and key method for
   Large-scale Deterministic Network (LDN).  LDN can provide bounded
   latency and delay variation (jitter) without requiring precise time
   synchronization among nodes, or per-flow state in transit nodes.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-qiang-DetNet-large-scale-DetNet-05'/>
   <format target='https://www.ietf.org/archive/id/draft-qiang-DetNet-large-scale-DetNet-05.txt' type='TXT'/>
</reference>


<reference anchor='I-D.dang-queuing-with-multiple-cyclic-buffers'>
   <front>
      <title>A Queuing Mechanism with Multiple Cyclic Buffers</title>
      <author fullname='Bingyang Liu'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Joanna Dang'>
	 <organization>Huawei</organization>
      </author>
      <date day='22' month='February' year='2021'/>
      <abstract>
	 <t>   This document presents a queuing mechanism with multiple cyclic
   buffers.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-dang-queuing-with-multiple-cyclic-buffers-00'/>
   <format target='https://www.ietf.org/archive/id/draft-dang-queuing-with-multiple-cyclic-buffers-00.txt' type='TXT'/>
</reference>


<reference anchor="CQF" >
  <front>
    <title>IEEE Std 802.1Qch-2017: IEEE Standard for Local and Metropolitan Area Networks - Bridges and Bridged Networks - Amendment 29: Cyclic Queuing and Forwarding</title>
    <author >
      <organization>IEEE Time-Sensitive Networking (TSN) Task Group.</organization>
    </author>
    <date year="2017"/>
  </front>
</reference>
<reference anchor="TSN-ATS" target="https://1.ieee802.org/tsn/802-1qcr/">
  <front>
    <title>P802.1Qcr - Bridges and Bridged Networks Amendment: Asynchronous Traffic Shaping</title>
    <author initials="J." surname="Specht" fullname="Johannes Specht">
      <organization></organization>
    </author>
    <date year="2020" month="July" day="09"/>
  </front>
  <seriesInfo name="IEEE" value=""/>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIAExjOWEAA61ceW/bSJb/34C/QyENTEsTUbaVvmJMD9aRndkscrgt9w4W
maCXIksSxxSp5mHHnfZ+9v29o4pFSU56gBG6HYms491XPTKKosODpEyzYnlq
2mYR/XB4cHjQZE1uT825bWy1zoqsbrLEvLXNXVndYKQZ4A5+Ds153MTmMo8L
ayLz5vL1zFxPzXW8XNKoRVmZ6X2SY+5PrW3pUlyk5mVZ3cVVyuvQlIimTH96
OTw8iOfzyt6emtQ2hW2i9SavoybBf78uDg/SMiniNcBKq3jRRDa5sVUT7Rka
HR8fHtwBn/OL67cX18AvbuyyrO5PTd2khwfZpjo1TdXWzeT4+PnxhDCuG4D2
S5yXBTa4t/XhwSY7Ne+bMhmZuqyayi5qfLtfy5ekXK9t0dQfaG7cNquyOj08
MCaiP/wRUK9LW+W2rs0FQ+vvlhXAe9k2bWXvbGaubbIqyrxcZrY2P8/O/Lga
G9vm1Ewmk2MzxY5VnJuLj5sKa97F935ckjXAbhYXYMc0j6u4u1OmgGN6Zp5/
e/ztcXC5xWKYE+5m13GWgzSN/Y+kHi/idpzafVjNGgsONuZFdY8d+0j9XGS3
tqoBjykXZtZWlb03r6az7U3q8Zxn/0fNQ8ZxMm5viJpZAblZxw2WYZJevZw+
m3x/7L7/8Py7b/z37779thtz/Nxf/+Z4ckprGfMqOh9nFnI9z2wVNTaKq2R1
2rujEjQHRVKbRjmEpUju/Zi+nG2NijZVOc/tuvbDf83iYhmJfmBUtbRRncS5
1Ut+XErDfhW1iO6yZhWt27zJNhiZsM5E83axACUVESjIqdBQlfPJq4uLC7Ai
NT8cT8YnPyWraHJ88v2p0euQZ2gZK+HrEhCw7r2xTVVuyjzDbXNW2dhpdQ39
fVFl6RICSAPlexrePoPEpyT1ZvL89POK/UQgDRTDywdDd52tbTSzBcQEbO5Z
luvZ2yEsSH1j/laV7WZsZHYKekMNgKCQA8Ois+vZFkkulRTVl7DxuJyas/q+
SFZVWZRtba5hWhZAa7aKNx0eta2gmCSYHhdC43QLtslxdPx9dPxcYSLeY/1V
02zq06OjE0ibtQQg6HDU1MURvkcnvybV0V5qiar9V7mKiwJozDawEQ0hH0WR
ieewDHHCv69XWW3Wdl3CbC4yGtusrGlrSwpIX51dXmQ2T+kiX3gdz21OcpLc
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
/wNcwhL5NVIAAA==

-->

</rfc>

